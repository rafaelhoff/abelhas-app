# This is a basic workflow that is manually triggered

name: Manual workflow - Deploy to Amplify

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: workflow_dispatch

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  deployAmplify:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [12]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Send greeting
        run: echo "Hello ${{ github.event.inputs.name }}"

      - uses: actions/checkout@v1

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build-artifact

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn

      - name: Configure Amplify
        id: configure-amplify
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          AMPLIFY: '{ "envName": "dev" }'
          AWSCLOUDFORMATIONCONFIG: '{"configLevel": "project", "useProfile": false, "accessKeyId": "$AWS_ACCESS_KEY_ID", "secretAccessKey": "$AWS_SECRET_ACCESS_KEY", "region": "$AWS_REGION" }'
          PROVIDERS: '{"awscloudformation": $AWSCLOUDFORMATIONCONFIG }'
        run: |
          sudo npm i -g @aws-amplify/cli
          echo '{"projectPath": "'"$(pwd)"'","defaultEditor":"code","envName":"'dev'"}' > ./amplify/.config/local-env-info.json
          amplify env pull --yes dev

      - name: Publish to Amplify
        id: publish-amplify
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          AMPLIFY: '{ "envName": "dev" }'
          AWSCLOUDFORMATIONCONFIG: '{"configLevel": "project", "useProfile": false, "accessKeyId": "$AWS_ACCESS_KEY_ID", "secretAccessKey": "$AWS_SECRET_ACCESS_KEY", "region": "$AWS_REGION" }'
          PROVIDERS: '{"awscloudformation": $AWSCLOUDFORMATIONCONFIG }'
        run: |
          amplify publish dev --yes
